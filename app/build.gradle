apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.rjp.fastframework"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        flavorDimensions "default"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'rjp-key'
            keyPassword '123456'
            storeFile file('rjp.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        channel_A {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "channel_A"]
        }
        channel_B {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "channel_B"]
        }
    }

    applicationVariants.all {
        //判断是release还是debug版本
        def buildType = it.buildType.name
        def fileName
        //下面的channel是获取渠道号，你获取渠道号不一定会和我的代码一样，因为有可能你的渠道名称的规则和我的不一样，我的规则是${渠道名}-${applicationId},所以我是这样取的。
        def channel = it.productFlavors[0].name
        //获取当前时间的"YYYY-MM-dd"格式。
        def createTime = new Date().format("YYYY_MM_dd", TimeZone.getTimeZone("GMT+08:00"))
        //只对Release包起作用，如果不是Release包则不变更输出路径，否则可能导致AS无法自动安装debug包。
        if (buildType == "release") {
            it.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/auto-apks/${it.productFlavors[0].name}/${createTime}")
        }
        it.outputs.each {
            //只对Release包起作用，如果不是Release包则不变更名称。
            if (buildType == "release") {
                //我此处的命名规则是：渠道名_项目名_版本名_创建时间_构建类型.apk
                fileName = APP_NAME + "-${channel}-v" + APP_VERSION + "-${createTime}-${buildType}.apk"
                //将名字打印出来，以便及时查看是否满意。
                println "文件名：-----------------${fileName}"
                //重新对apk命名。(适用于Gradle4.0以下版本)
                //it.outputFile = new File(it.outputFile.parent, fileName)
                //重新对apk命名。(适用于Gradle4.0（含）以上版本)如果你Gradle版本是4.0以下版本则将上面的一行代码放开并注释下面的这一行。
                it.outputFileName = fileName
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    compile project(path: ':expandframework')

    implementation 'com.blankj:utilcode:1.21.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
}
